---
layout: post
title:  "生信分析"
date:   2025-07-08
subtitle: '学习'
categories: Study
comments: true
music-id: 485612935
published: true
tags: 
- Study
---
<!--excerpt-->

全文默认linux系统下操作，使用 Ubunte LTS 系列系统，

# 1.0 Qiime2 专题

## 1.1 安装

参考：
https://amplicon-docs.qiime2.org/en/latest/

### 1.1.1 前置安装-miniconda

代码：
```markdown
    mkdir -p ~/miniconda3
    wget https://repo.anaconda.com/miniconda/Miniconda3-latest-Linux-x86_64.sh -O ~/miniconda3/miniconda.sh
    bash ~/miniconda3/miniconda.sh -b -u -p ~/miniconda3
    rm ~/miniconda3/miniconda.sh
    # 关闭终端后再开
    source ~/miniconda3/bin/activate
    conda init --all
```
### 1.1.2 更新miniconda

```markdown
    conda update conda
```

### 1.1.3 安装qiime2

参考：https://www.anaconda.com/docs/getting-started/miniconda/install#quickstart-install-instructions

```markdown
    conda env create \
  --name qiime2-amplicon-2025.4 \
  --file https://raw.githubusercontent.com/qiime2/distributions/refs/heads/dev/2025.4/amplicon/released/qiime2-amplicon-ubuntu-latest-conda.yml
```

测试：

```markdown
    conda deactivate    # 脱除环境
    conda activate qiime2-amplicon-2025.4   # conda activate qiime2-版本号
    qiime info
```
## 1.2 准备数据
生成原始数据的file path文件，该文件包含首行、每个样本的ID、rawreads文件路径、forward或reverse信息首行必须是:sample-id,absolute-filepath,direction

## 1.3 开始

```markdown
    conda activate qiime2-amplicon-2024.10
    #单端数据使用命令：(如报错尝试删除下面的V2)
    qiime tools import --type 'SampleData[PairedEndSequencesWithQuality]' --input-path manifest.csv --output-path demux-summary.qza --input-format PairedEndFastqManifestPhred33V2
    #双端数据使用命令：
    qiime tools import --type 'SampleData[SequencesWithQuality]'  --input-path manifest.csv --output-path single-end-demux.qza  --input-format SingleEndFastqManifestPhred33V2
    
    #生成qzv可视化文件查看数据质量：
    qiime demux summarize \
    --i-data single-end-demux.qza \
    --o-visualization demux.qzv
    qiime tools view demux.qzv

    #dada2降噪
    qiime dada2 denoise-single \
    --i-demultiplexed-seqs single-end-demux.qza \
    --p-trim-left 0 \
    --p-trunc-len 0 \
    --p-n-threads 0 \
    --o-representative-sequences rep-seqs-dada2.qza \
    --o-table table-dada2.qza \
    --o-denoising-stats stats-dada2.qza
    #查看序列质量控制后的统计表格
    qiime metadata tabulate \
    --m-input-file stats-dada2.qza \
    --o-visualization stats-dada2.qzv
    qiime tools view stats-dada2.qzv

    #生成发育树
    qiime feature-table summarize \
    --i-table table-dada2.qza \
    --o-visualization table-dada2.qzv \
    --m-sample-metadata-file metadata.tsv
    qiime feature-table tabulate-seqs \
    --i-data rep-seqs-dada2.qza \
    --o-visualization rep-seqs-dada2.qzv
    qiime phylogeny align-to-tree-mafft-fasttree \
    --i-sequences rep-seqs-dada2.qza \
    --o-alignment aligned-rep-seqs-dada2.qza \
    --o-masked-alignment masked-aligned-rep-seqs-dada2.qza \
    --o-tree unrooted-tree-dada2.qza \
    --o-rooted-tree rooted-tree-dada2.qza
    qiime tools view table-dada2.qzv
    qiime tools view rep-seqs-dada2.qzv

    #多样性分析
    #先查看最小的序列数量，再决定将测序深度统一到多少。use qiime tools view table-dada2.qzv to check the minimun sequencing depth, and use this value to set --p-sampling-depth in the following step
    qiime tools view table-dada2.qzv

    qiime diversity core-metrics-phylogenetic \
    --i-phylogeny rooted-tree-dada2.qza \
    --i-table table-dada2.qza \
    --p-sampling-depth 21591 \
    --m-metadata-file metadata.tsv \
    --output-dir core-metrics-results-dada2
    qiime diversity alpha-group-significance \
    --i-alpha-diversity core-metrics-results-dada2/faith_pd_vector.qza \
    --m-metadata-file metadata.tsv \
    --o-visualization core-metrics-results-dada2/faith-pd-group-significance.qzv
    qiime diversity alpha-group-significance \
    --i-alpha-diversity core-metrics-results-dada2/evenness_vector.qza \
    --m-metadata-file metadata.tsv \
    --o-visualization core-metrics-results-dada2/evenness-group-significance.qzv

    qiime diversity beta-group-significance \
    --i-distance-matrix core-metrics-results-dada2/unweighted_unifrac_distance_matrix.qza \
    --m-metadata-file metadata.tsv \
    --m-metadata-column SampleType \
    --o-visualization core-metrics-results-dada2/unweighted-unifrac-sampletype-significance.qzv \
    --p-pairwise
    qiime tools view core-metrics-results-dada2/unweighted-unifrac-sampletype-significance.qzv
    qiime diversity beta-group-significance \
    --i-distance-matrix core-metrics-results-dada2/unweighted_unifrac_distance_matrix.qza \
    --m-metadata-file metadata.tsv \
    --m-metadata-column Position \
    --o-visualization core-metrics-results-dada2/unweighted-unifrac-position-significance.qzv \
    --p-pairwise
    qiime tools view core-metrics-results-dada2/unweighted-unifrac-position-significance.qzv

    #(PCoA) using emperor with a custom axes(Depth as example):
    qiime emperor plot \
    --i-pcoa core-metrics-results-dada2/unweighted_unifrac_pcoa_results.qza \
    --m-metadata-file metadata.tsv \
    --p-custom-axes Depth \
    --o-visualization core-metrics-results-dada2/unweighted-unifrac-emperor-depth.qzv
    qiime tools view core-metrics-results-dada2/unweighted-unifrac-emperor-depth.qzv
    qiime emperor plot \
    --i-pcoa core-metrics-results-dada2/bray_curtis_pcoa_results.qza \
    --m-metadata-file metadata.tsv \
    --p-custom-axes Depth \
    --o-visualization core-metrics-results-dada2/bray-curtis-emperor-depth.qzv
    qiime tools view core-metrics-results-dada2/bray-curtis-emperor-depth.qzv

    #alpha 多样性的稀释曲线use qiime tools view table-dada2.qzv to check the median sequencing depth, and use this value (slightly larger than this value) to set --p-max-depth in the following step.e.g. :median frequency: 37,648.5, set to 40000
    qiime diversity alpha-rarefaction \
    --i-table table-dada2.qza \
    --i-phylogeny rooted-tree-dada2.qza \
    --p-max-depth 35000 \
    --m-metadata-file metadata.tsv \
    --o-visualization alpha-rarefaction-dada2.qzv

    #物种注释分析
    #visit this [resource page](https://www.arb-silva.de/no_cache/download/archive/qiime/) and download the latest( [Silva_132_release.zip](https://www.arb-silva.de/fileadmin/silva_databases/qiime/Silva_132_release.zip)) silva release which is compartible with qiime/qiime2, and extract
    #1. /rep_set/rep_set_16S_only/99/silva_132_99_16S.fna
    #2. /taxonomy/16S_only/99/consensus_taxonomy_7_levels.txt

    #Train the feature classifier
    qiime tools import \
    --type 'FeatureData[Sequence]' \
    --input-path silva_132_99_16S.fna \
    --output-path silva_132_99_16S.qza
    qiime tools import \
    --type 'FeatureData[Taxonomy]' \
    --input-format HeaderlessTSVTaxonomyFormat \
    --input-path consensus_taxonomy_7_levels.txt \
    --output-path consensus_taxonomy_7_levels.qza
    qiime feature-classifier extract-reads \
    --i-sequences silva_132_99_16S.qza \
    --p-f-primer CCTAYGGGRBGCASCAG \
    --p-r-primer GGACTACNNGGGTATCTAAT \
    --p-n-jobs 8\
    --o-reads ref_seqs_341F_806R_silva_132_99_16S.qza
    qiime feature-classifier fit-classifier-naive-bayes \
    --i-reference-reads ref_seqs_341F_806R_silva_132_99_16S.qza \
    --i-reference-taxonomy consensus_taxonomy_7_levels.qza \
    --o-classifier classifier_341F_806R_silva_132_99_16S.qza

    #Assign taxonomy
    qiime feature-classifier classify-sklearn \
    --i-classifier classifier_341F_806R_silva_132_99_16S.qza \
    --i-reads rep-seqs-dada2.qza \
    --o-classification taxonomy-dada2.qza
    qiime metadata tabulate \
    --m-input-file taxonomy-dada2.qza \
    --o-visualization taxonomy-dada2.qzv
    qiime taxa barplot \
    --i-table table-dada2.qza \
    --i-taxonomy taxonomy-dada2.qza \
    --m-metadata-file metadata.tsv \
    --o-visualization taxa-bar-plots-dada2.qzv
```    

## 1.4 数据使用
1.otu_table: table-dada2.qza/data/feature-table.biom

2.tax_table: taxonomy-dada2.qza/data/taxonomy.tsv

3.sample_data: metadata.tsv

4.phy_tree: rooted-tree-dada2.qza/data/tree.nwk

# 2.0 Picrust2 专题

## 2.1 安装
方法1：
```markdown
conda create -n picrust2 -c bioconda -c conda-forge picrust2=2.3.0_b
```

方法2：
```markdown
wget https://github.com/picrust/picrust2/archive/refs/tags/v2.4.1.tar.gz
tar xvzf  v2.4.1.tar.gz
cd picrust2-2.4.1/
conda env create -f picrust2-env.yaml
source activate picrust2
pip install --editable .
pytest
```

## 2.2 使用
```markdown
    source activate picrust2
    source deactivate

    #一键命令
    picrust2_pipeline.py -s otu.fasta  -i otu_table.txt -o picrust2_out_pipeline -p 20 \
    -r default_files/prokaryotic/pro_ref/pro_ref --in_traits COG,EC,KO,PFAM,TIGRFAM

    picrust2_pipeline.py -s otu.fasta  -i otu_taxa_table.txt -o picrust2_out_pipeline -p 20 \
    -r /home/llgy/miniconda3/envs/qiime2-2021.2/lib/python3.6/site-packages/picrust2/default_files/prokaryotic/pro_ref --in_traits COG,EC,KO,PFAM,TIGRFAM

    picrust2_pipeline.py -s otu.fasta  -i otu_table.txt -o picrust2_out_pipeline -p 20 \
    -r /home/llgy/miniconda3/envs/qiime2-2021.11/lib/python3.8/site-packages/picrust2/default_files/prokaryotic/pro_ref
    --in_traits COG,EC,KO,PFAM,TIGRFAM

    #注释
    add_descriptions.py -i EC_metagenome_out/pred_metagenome_unstrat.tsv.gz -m EC \
    -o EC_metagenome_out/pred_metagenome_unstrat_descrip.tsv.gz

    add_descriptions.py -i KO_metagenome_out/pred_metagenome_unstrat.tsv.gz -m KO \
    -o KO_metagenome_out/pred_metagenome_unstrat_descrip.tsv.gz
                    
    add_descriptions.py -i COG_metagenome_out/pred_metagenome_unstrat.tsv.gz -m COG \
    -o COG_metagenome_out/pred_metagenome_unstrat_descrip.tsv.gz
                    
    add_descriptions.py -i PFAM_metagenome_out/pred_metagenome_unstrat.tsv.gz -m PFAM \
    -o PFAM_metagenome_out/pred_metagenome_unstrat_descrip.tsv.gz
                    
    add_descriptions.py -i TIGRFAM_metagenome_out/pred_metagenome_unstrat.tsv.gz -m TIGRFAM \
    -o TIGRFAM_metagenome_out/pred_metagenome_unstrat_descrip.tsv.gz
                    
    add_descriptions.py -i pathways_out/path_abun_unstrat.tsv.gz -m METACYC \
    -o pathways_out/path_abun_unstrat_descrip.tsv.gz

    add_descriptions.py -i KEGG_pathways/path_abun_unstrat.tsv.gz --custom_map_table /home/llgy/KEGG_pathways_info.tsv.gz -o KEGG_pathways/path_abun_unstrat_descrip.tsv.gz
```

# 3.0 Kraken2 专题

## 3.1 安装
```markdown
    conda install kraken2
    kraken2 --version

    #KrakenTools安装
    #在https://github.com/jenniferlu717/KrakenTools下载所有python代码
    chmod +x （代码绝对路径）
    （代码绝对路径）-h
```

## 3.2 使用
### 3.2.1 创建数据库文件夹
```markdown
mkdir database
cd database
mkdir kraken2
```

### 3.2.2 创建数据库
```markdown
    # 下载数据库，先设置存放位置

    DBNAME=~/db/kraken2/202506
    mkdir -p DBNAME
    cd $DBNAME
 
    # 下载物种注释，259
    kraken2-build --download-taxonomy --threads 10 --db $DBNAME
 
    # 下载非默认数据库中的真菌库 1.33G
    kraken2-build --download-library fungi --threads 10 --db $DBNAME
 
    # 批量下载，非标准数据库
    for i in archaea bacteria plasmid viral human fungi plant protozoa nr nt env_nr env_nt UniVec; do
    kraken2-build --download-library $i --threads 10 --db $DBNAME

    for i in archaea bacteria viral fungi plant protozoa; do
    kraken2-build --download-library $i --threads 10 --db $DBNAME

    # 确定的库建索引
    kraken2-build --build --threads 10 --db $DBNAME
```