---
layout: post
title:  "Jekyll学习"
subtitle: '软件与环境的简单安装与调试'
date:   2023-05-24
categories: Study
comments: true
tags: 
- Study
---
进行个`Jekyll`的学~呜呜呜，搞成功后我真的是要泪崩了，为了弄这玩意多次学到凌晨6点，但感谢我的运气，感谢我的耐心。那么废话不多说，赶快把这次学到的一切以语言形式记录下来把~

# 1. 软件介绍（[当然是复制别人的啦](http://www.noobyard.com/article/p-nwnqarhl-gs.html)）

Jekyll是一个简单的，博客感知的静态站点生成器。

你将内容建立为文本文件（Markdown），并将其放到到文件夹中。而后，使用Liquid-enhanced HTML模板构建网站。Jekyll自动将内容和模板联系在一块儿，生成彻底由静态资源组成的网站，它适合上传到任何服务器。

Jekyll刚好是GitHub Pages的引擎，所以你能够在GitHub的服务器上免费托管项目的Jekyll页面/博客/网站。

# 1.1 GitHub + Jekyll 工作机制

简单地说，你在 GitHub 上有一个账号，名为`username`(任意)， 有一个项目，名为`username.github.io`(固定格式，`username`与账号名一致)， 项目分支名为 `master`(你可以自己改)。

这样，当你访问`http://username.github.io/`时，GitHub 会使用`Jekyll`解析用户 `username`名下的`username.github.io`项目中，分支为`master`的源代码，为你构建一个静态网站，并将生成的`index.html`展示给你。

如果要搭建自己的博客，你可以选择建立名为`username.github.io`的项目， 在master分支下存放网站源代码，也可以选择建立名为`blog`的项目，在`gh-pages`分支下存放网站源代码。（推荐前者）

[具体工作原理可以看这个](https://www.cnblogs.com/Eaglery/p/5126279.html)

# 2. 总体流程

## 2.1 各软件的安装和升级msys2的安装

```msys2_install
ridk install（该步之前请上官网下载安装软件，之后cmd自动安装）
```

```install
gem install jekyll bundler
```

```jekyll_update
gem update jekyll
```

## 2.4 jekyll相关指令

```jekyll
jekyll new XXX（该步是建立一个新的Jekyll站点，创建指令需要管理员下的CMD，不然各种错误）
cd XXX （进入刚才创建的目录）
bundle install（该步为安装Gefile内需要组件）
bundle update
bundle exec jekyll serve（开始构建本地网址）（如果发现4000被占用，可以[参考这个](https://blog.csdn.net/weixin_30666401/article/details/98372840)）
```
```jekyll_theme
（主题下载网址：https://rubygems.org/search?query=jekyll-theme）
（参考使用方法：将github上的文件全部下载覆盖自己的blog文件夹，之后再次bundle install）
```

## 2.5 写Blog

进入_post目录，开始你的创作吧，注意文件的格式必须为YEAR-MONTH-DAY-title.MARKUP，如：2019-02-13-blog.md。

为了后续编辑方便，这边推荐复制一下你Blog文件夹，以后你编辑内容时使用非上传文件夹（旧文件夹）。需要上传时复制一下整体，在新文件夹里把site文件夹里的文件全部拷贝到新文件夹里，上传步骤中上传新文件夹就不会出现Blog合集无法显示的问题了。

## 2.6 数据上传github（全程必须有梯子，或者改host）

```git_upload
git init
git checkout -b main
git add .
git commit -m "XX" （以XX名字上传github）
git remote add origin https://github.com/LLGY0/LLGY0.github.io.git
git push origin main （正式开始上传）
```
```other_git_deploy_option
    （这一部分实战不需要，放在这是为了参考）
    git checkout source
    jekyll build
    git add -A
    git commit -m "update source"
    cp -r _site/ /tmp/
    git checkout master
    rm -r ./*
    cp -r /tmp/_site/* ./
    git add -A
    git commit -m "deploy blog"
    git push origin master
    git checkout source
    echo "deploy succeed"
    git push origin source
    echo "push source"
```

## 2.6 运行查看Blog
直接访问项目名(<username>.github.io)就可以看你blog了，如：XXX.github.io

## 2.7 自定义域名（要花钱的）
自定义域名需要有自己的域名，没有可以去阿里云注册购买个心意的域名；进入域名配置中心，配置域名解析；进入github项目设置，设置自己的域名并保存，开启Enforce HTTPS，就完成了自定义域名设置

# 3. 其他事项

## 3.1 网址初始附加

### 3.1.1 [超链接文字→](https://github.com/kaeyleo/jekyll-theme-H2O)

### 3.1.2 插图片
![图片名](http://on2171g4d.bkt.clouddn.com/jekyll-theme-h2o-realhome.jpg)

### 3.1.3 `X`高亮

### 3.1.4 代码：
```markdown
<pre><code class="language-css">p { color: red }</code></pre>
```

### 3.1.5 
- X  -变成原点

### 3.1.6
 > A

### 3.1.7 Video Test
（这一部分仍需解决视频自动播放问题，如果用沙盒会导致下面的文字不见）
```Code
<iframe id="video" src="https://www.bilibili.com/video/BV1qs41157ZZ" width="100%" frameborder="0" allowfullscreen="allowfullscreen" sandbox=""></iframe>
<script type="text/javascript">document.getElementById("video").style.height=document.getElementById("video").scr
```


### 3.1.8 加粗
**A** 

### 3.1.9 公式
**这是一个不`align`的公式**：

$$
\forall \alpha \in A, \quad a \cdot b = 0
$$

**这是一个`align`的公式**：

$$
\begin{align}
    \Phi(0,x) = \max_{u \in \mathcal{D}} \bigg[
        \mathbb{E} & \Phi\left(1, 
        x + \int_0^1 \sigma^2(s) \, \zeta(s) \, u_s \, ds
        + \int_0^1 \sigma(s) \, dW_s
    \right) \\
        &- \frac{1}{2} \int_0^1 \sigma^2(s) \, \zeta(s) \,
        \mathbb{E} u_s^2  \, ds
    \bigg].
\end{align}
$$


### 3.1.10 空2格
&emsp;&emsp; 

### 3.1.11 提示框
> note ""
> The body of the note goes here. Premonition allows you to write any `Markdown` inside the block.

> info "小提示"
> The body of the info goes here. Premonition allows you to write any `Markdown` inside the block.

> warning ""
> The body of the warning goes here. Premonition allows you to write any `Markdown` inside the block.

> error ""
> The body of the error goes here. Premonition allows you to write any `Markdown` inside the block.

> citation "莎士比亚"
> To be or not to be is a question.

### 3.1.12 Mermaid画

```mermaid
graph TD;
    A-->B;
    A-->C;
    B-->D;
    C-->D;
```

```mermaid2
    graph TD;
    A-->B;
    A-->C;
    B-->D;
    C-->D;
```

```mermaid2
    gantt
      title A Gantt Diagram
      dateFormat x
      axisFormat %L
      section Section
      A task           :a1, 0, 30ms
      Another task     :after a1, 20ms
      section Another
      Another another task      :b1, 20, 12ms
      Another another another task     :after b1, 24ms
```

```mermaid2
    gantt
    dateFormat  YYYY-MM-DD
    title       Adding GANTT diagram functionality to mermaid
    excludes    weekends
    %% (`excludes` accepts specific dates in YYYY-MM-DD format, days of the week ("sunday") or "weekends", but not the word "weekdays".)

    section A section
    Completed task            :done,    des1, 2014-01-06,2014-01-08
    Active task               :active,  des2, 2014-01-09, 3d
    Future task               :         des3, after des2, 5d
    Future task2              :         des4, after des3, 5d

    section Critical tasks
    Completed task in the critical line :crit, done, 2014-01-06,24h
    Implement parser and jison          :crit, done, after des1, 2d
    Create tests for parser             :crit, active, 3d
    Future task in critical line        :crit, 5d
    Create tests for renderer           :2d
    Add to mermaid                      :1d
    Functionality added                 :milestone, 2014-01-25, 0d

    section Documentation
    Describe gantt syntax               :active, a1, after des1, 3d
    Add gantt diagram to demo page      :after a1  , 20h
    Add another diagram to demo page    :doc1, after a1  , 48h

    section Last section
    Describe gantt syntax               :after doc1, 3d
    Add gantt diagram to demo page      :20h
    Add another diagram to demo page    :48h
```
### 3.1.13 其他
[pdf名字](https://用户名.github.io/....pdf)


## 3.2 注意事项

### 3.2.1 事项1
注意git的时候千万不能用`gh-pages`（不然在github生成网站时会出错，错误提示：`Action failed with "You deploy from gh-pages to gh-pages；This operation is prohibited to protect your contents`）

### 3.2.2 事项2
命名github的`repository`时，命名直接用`用户名+.github.io`，这样设置用户文件夹里的`_config.yml`时，就不用改`baseurl`了。（如果改baseurl，很容易导致jekyll s时出错，出错代码：`sw not found`）

### 3.2.3 事项3
[关于`_config.yml`中`baseurl`的介绍](https://blog.csdn.net/pxyyoona/article/details/123150326)

### 3.2.4 事项4
上传时出现`The requested URL returned error: 403`的解决方法
[链接1](https://blog.csdn.net/weixin_45844049/article/details/123733065)
[链接2](https://blog.csdn.net/qq_40226073/article/details/119801341)

### 3.2.5 事项5
.gitignore文件有可能将_site文件添加为忽略文件，以至于后续操作将该文件忽略，从而无法上传至远程仓库的问题。_site文件以及.sass-cache文件都不能被忽略。另一方面，site里面的文件内容需要上传到github来使重要元件显现。
[链接1](https://blog.csdn.net/qq_43328313/article/details/124066785)
[链接2](https://blog.csdn.net/qq_56914146/article/details/128994392)